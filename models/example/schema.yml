version: 2

models:
  - name: my_first_dbt_model
    description: "A starter dbt model"
    columns:
      - name: id
        description: "The primary key for this table"
        tests:
          - unique
          - not_null



  - name: my_second_dbt_model
    description: "A starter dbt model"
    columns:
      - name: id
        description: "The primary key for this table"
        tests:
          - unique
          - relationships:
              to: ref('my_first_dbt_model')
              field: id


  - name: snowflake_customer_purchases
    description: "the total purchases for each customer in snowflake sample data"
    columns:
      - name: c_custkey # we need to use the column name
        tests:
          - unique
          - not_null
  - name: cumulative_orders_by_date
    description: "the accumulative sales for the order date in orders table in snowflake sample data"
    columns:
      - name: o_orderdate # we need to use the column name
        tests:
          - unique
          - not_null
  - name: incremental_time

  - name: playing_with_tests
    description: "the customer sample data in TPCH_SF1 Snowflake sample data"
    columns:
      - name: c_custkey
        tests:
          - not_null
          - unique
      - name: c_mktsegment
        tests:
          - accepted_values:
              values: [ 'BUILDING','AUTOMOBILE','MACHINERY','HOUSEHOLD','FURNITURE' ]

sources:
  - name: sample
    database: snowflake_sample_data #Tell dbt to look for the source in the "raw" database
    schema: tpch_sf1 #You wouldn't put your source data in public, would you?
    tables:
      - name: customer
        columns:
          - name: c_custkey
            tests:
              - unique
              - not_null
      - name: orders